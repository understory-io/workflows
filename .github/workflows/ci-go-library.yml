name: CI

on:
  workflow_call:
    secrets:
      go-private-modules-pat:
        required: true

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup access to private Go modules
        env:
          GO_PRIVATE_MODULES_PAT: ${{ secrets.go-private-modules-pat }}
        run: |
          git config --global \
            url."https://understory-services:${GO_PRIVATE_MODULES_PAT}@github.com/understory-io".insteadOf \
            "https://github.com/understory-io"

      # Go caching strategy is based on https://danp.net/posts/github-actions-go-cache/
      - name: Restore Go cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          # always grab from the restore-keys pattern below,
          # like Linux-go-$hash-YYYY-MM-DD as saved by CI
          key: nonexistent
          restore-keys: ${{ runner.os }}-go-${{ hashFiles('go.mod') }}-

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false

      - name: Pull dependencies
        run: go mod download -x

      - name: Build
        run: |
          export GOFLAGS="-mod=readonly"
          make build

      - name: Test
        run: |
          export GOFLAGS="-mod=readonly"
          make test
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test

        # experimental improved cache strategy
      - name: Trim Go cache
        if: ${{ github.ref == 'refs/heads/main' }}
        shell: bash
        # As the go command works, it either creates build cache files or touches
        # ones it uses at most once an hour. When it trims the cache, it trims
        # files that have not been modified/touched in 5+ days.
        # To keep our saved cache lean, trim all files except ones that were just
        # created/touched as part of this run.
        run: |
          find ~/.cache/go-build -type f -mmin +90 -delete

      - name: Set Go cache date
        shell: bash
        run: echo "GO_CACHE_DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV

      - name: Save Go cache
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/cache/save@v4
        with:
          # Caches both the downloaded modules and the compiled build cache.
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          # Save to eg Linux-go-$hash-YYYY-MM-DD to keep the cache fresh
          key: "${{ runner.os }}-go-${{ hashFiles('go.mod') }}-${{ env.GO_CACHE_DATE }}"
