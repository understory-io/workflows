name: ".NET Core Library"
on:
  workflow_call:
    inputs:
      buildConfiguration:
        required: false
        type: string
        default: Debug
      versionSuffix:
        required: false
        type: string
        default: ''
      nuget_username:
        type: string
        required: false
      version:
        required: false
        type: string
        default: ''
    secrets:
      nuget_auth_token:
        required: true

env:
  NUGET_AUTH_TOKEN: ${{ secrets.nuget_auth_token }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_AUTH_TOKEN }}
          
      #- name: Authenticate with Github Nuget Repository
      #  if: inputs.nuget_username != ''
      #  run: |
      #    dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github --username ${{ inputs.nuget_username }} --password ${{ secrets.nuget_auth_token }} --store-password-in-clear-text --configfile nuget.config
        
      - name: Get Project Name
        id: project_data
        run: |
          project_name=$(basename *.sln .sln)
          echo "project_name=$project_name" >> $GITHUB_OUTPUT
          echo "Project name: $project_name"

      - name: Build and Pack
        if: inputs.versionSuffix != ''
        run: |
          dotnet pack --configuration ${{ inputs.buildConfiguration }} --version-suffix=${{ inputs.versionSuffix }} --output=package/${{ inputs.buildConfiguration }} ${{ steps.project_data.outputs.project_name}}/${{ steps.project_data.outputs.project_name}}.csproj
        
      - name: Build and Pack (stable)
        if: inputs.version != ''
        run: |
          dotnet pack --configuration ${{ inputs.buildConfiguration }} --output=package/${{ inputs.buildConfiguration }} ${{ steps.project_data.outputs.project_name}}/${{ steps.project_data.outputs.project_name}}.csproj /p:Version=${{ inputs.version }}
      
      - name: Publish
        run: dotnet nuget push package/${{ inputs.buildConfiguration }}/*.nupkg
