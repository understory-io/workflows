name: "Build & Deploy Glue Lambda Service"

on:
  workflow_call:
    inputs:
      stage:
        type: string
        required: true
      api_dir:
        type: string
        default: ""
      node_aws_env_ref:
        type: string
        default: "v2.0.4"
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_region:
        required: true
      aws_role_to_assume:
        required: false
      hb_github_ssh_key:
        required: true
      hb_github_packages_read_only_token:
        required: true

jobs:
  build:
    name: "Build & Deploy Service"
    runs-on: ubuntu-latest
    environment: ${{ inputs.stage }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: "./checkout"

      - name: Checkout Glue
        uses: actions/checkout@v4
        with:
          repository: understory-io/glue
          ref: main
          path: "./glue"
          ssh-key: ${{ secrets.hb_github_ssh_key }}

      - name: Checkout node-aws-env
        uses: actions/checkout@v4
        with:
          repository: understory-io/node-aws-env
          ref: ${{ inputs.node_aws_env_ref }}
          path: "./node-aws-env"
          ssh-key: ${{ secrets.hb_github_ssh_key }}

      - name: Restore node-aws-env cache
        id: restore-node-aws-env-cache
        uses: actions/cache/restore@v4
        with:
          path: "./node-aws-env"
          key: ${{ hashFiles('node-aws-env/package-lock.json') }}-node-aws-env-${{ inputs.node_aws_env_ref }}

      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.hb_github_ssh_key }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          node-version: 22
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          scope: "@understory-io"

      - name: Install & Setup node-aws-env
        if: steps.restore-node-aws-env-cache.outputs.cache-hit != 'true'
        run: |
          cd ./node-aws-env
          npm install -g typescript@5.4.5 eslint@8.57.0 mocha@10.4.0
          npm install
          tsc

      - name: Save node-aws-env cache
        if: steps.restore-node-aws-env-cache.outputs.cache-hit != 'true'
        id: save-node-aws-env-cache
        uses: actions/cache/save@v4
        with:
          path: "./node-aws-env"
          key: ${{ hashFiles('node-aws-env/package-lock.json') }}-node-aws-env

      - name: Configure AWS credentials
        id: aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region }}
          role-to-assume: ${{ secrets.aws_role_to_assume }}
          role-session-name: Github-Actions-Glue-Session
          role-duration-seconds: 3600

      - name: Install project dependencies
        run: |
          cd ./checkout${{ inputs.api_dir }}
          npm install -g typescript@5.4.5 eslint@8.57.0 mocha@10.4.0
          npm install

      - name: Build
        run: |
          cd ./checkout${{ inputs.api_dir }}
          tsc 
          eslint
          #node ${{ github.workspace }}/checkout${{ inputs.api_dir }}/node_modules/@riddance/env/bin/prepare.js
          #node ${{ github.workspace }}/checkout${{ inputs.api_dir }}/node_modules/@riddance/env/bin/install.js ${{ github.workspace }}/checkout${{ inputs.api_dir }}

      - name: Test
        if: ${{ inputs.stage != 'production' }}
        env:
          stage: ${{ inputs.stage }}
          CI: true
        run: |
          cd ./checkout${{ inputs.api_dir }}
          [ -f test/env.${{ inputs.stage }}.txt ] && mv test/env.${{ inputs.stage }}.txt test/env.txt
          mocha

      - name: Deploy
        run: |
          cd ./checkout${{ inputs.api_dir }}
          node ${{ github.workspace }}/node-aws-env/bin/deploy.js --env ${{ inputs.stage }} --glue-file ${{ github.workspace }}/glue/${{ inputs.stage }}/glue.json
