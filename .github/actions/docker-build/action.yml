name: "Docker Build and Push"
inputs:
  # Github access
  ssh_key:
    description: "key to use for cross repo access"
    required: false
    secret: true
  image_tag_prefix:
    description: "which tag to use"
    required: true
  app_path:
    description: "in which application is your application located"
    required: true
  target:
    description: "which target in the docker file to export"
  platform:
    description: "which platform to build for, eg. linux/arm64"

  # Aws
  ecr_repository_name:
    description: "ecr repository name"
    required: true
  aws_access_key_id:
    required: true
    secret: true
  aws_secret_access_key:
    required: true
    secret: true
  aws_region:
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup ssh agent
      if: inputs.ssh_key != ''
      uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: ${{ inputs.ssh_key }}

    - name: Setup git for private auth
      if: inputs.ssh_key != ''
      shell: bash
      run: |
        git config --global url."ssh://git@github.com".insteadOf https://github.com && \
        mkdir -p -m 0600 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v5
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      env:
        BUILDX_NO_DEFAULT_ATTESTATIONS: true
      with:
        context: ${{ inputs.app_path }}
        file: ./${{ inputs.app_path }}/Dockerfile
        target: ${{ inputs.target }}
        platforms: ${{ inputs.platform }}
        provenance: false
        push: true
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository_name }}:${{ github.sha }}
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository_name }}:${{ inputs.image_tag_prefix }}${{ github.run_number }}
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository_name }}:${{ inputs.image_tag_prefix }}latest
        ssh: ${{ inputs.ssh_key != '' && format('default={0}', env.SSH_AUTH_SOCK) || '' }}
